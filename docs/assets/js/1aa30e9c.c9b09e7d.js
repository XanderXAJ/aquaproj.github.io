"use strict";(self.webpackChunkaqua_docusaurus=self.webpackChunkaqua_docusaurus||[]).push([[252],{3905:function(e,n,a){a.d(n,{Zo:function(){return u},kt:function(){return g}});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),p=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},u=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(a),g=r,d=m["".concat(s,".").concat(g)]||m[g]||c[g]||o;return a?t.createElement(d,i(i({ref:n},u),{},{components:a})):t.createElement(d,i({ref:n},u))}));function g(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5950:function(e,n,a){a.r(n),a.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var t=a(7462),r=a(3366),o=(a(7294),a(3905)),i=["components"],l={sidebar_position:700},s="How does Lazy Install works?",p={unversionedId:"reference/lazy-install",id:"reference/lazy-install",isDocsHomePage:!1,title:"How does Lazy Install works?",description:"In this document we describe how the Lazy Install works.",source:"@site/docs/reference/lazy-install.md",sourceDirName:"reference",slug:"/reference/lazy-install",permalink:"/docs/reference/lazy-install",editUrl:"https://github.com/aquaproj/aquaproj.github.io/docs/reference/lazy-install.md",tags:[],version:"current",sidebarPosition:700,frontMatter:{sidebar_position:700},sidebar:"tutorialSidebar",previous:{title:"Where are tools installed?",permalink:"/docs/reference/install-location"},next:{title:"Uninstall aqua",permalink:"/docs/reference/uninstall"}},u=[],c={toc:u};function m(e){var n=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-does-lazy-install-works"},"How does Lazy Install works?"),(0,o.kt)("p",null,"In this document we describe how the Lazy Install works.\nThe Lazy Install is the aqua's characteristic feature, and maybe you feel it like magic."),(0,o.kt)("p",null,"By ",(0,o.kt)("inlineCode",{parentName:"p"},"aqua i"),", aqua installs ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-proxy"},"aqua-proxy")," regardless the aqua's configuration."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"~/.aqua/\n  bin/\n    aqua-proxy -> ../pkgs/github_release/github.com/aquaproj/aqua-proxy/v0.1.2/aqua-proxy_darwin_amd64.tar.gz/aqua-proxy\n  pkgs/\n    github_release/github.com/aquaproj/aqua-proxy/v0.1.2/aqua-proxy_darwin_amd64.tar.gz/aqua-proxy\n")),(0,o.kt)("p",null,"And by ",(0,o.kt)("inlineCode",{parentName:"p"},"aqua i"),", aqua reads the configuration file and creates symbolic links to aqua-proxy in ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.aqua/bin"),".\nThe symbolic link name is the package's file name."),(0,o.kt)("p",null,"For example, by the following configuration symbolic links ",(0,o.kt)("inlineCode",{parentName:"p"},"go")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"gofmt")," are created."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'inline_registry:\n  packages:\n  - name: go\n    type: http\n    url: https://golang.org/dl/go{{.Version}}.{{.OS}}-{{.Arch}}.tar.gz\n    files:\n    - name: go # the symbolic `go` is created\n      src: go/bin/go\n    - name: gofmt # the symbolic `gofmt` is created\n      src: go/bin/gofmt\n\npackages:\n- name: go\n  registry: inline\n  version: "1.17"\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"~/.aqua/\n  bin/\n    go -> aqua-proxy\n    gofmt -> aqua-proxy\n")),(0,o.kt)("p",null,"Add ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.aqua/bin")," to the environment variable ",(0,o.kt)("inlineCode",{parentName:"p"},"PATH"),".\nWhen ",(0,o.kt)("inlineCode",{parentName:"p"},"go version")," is executed, ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.aqua/bin/go")," is a symbolic link to aqua-proxy so aqua-proxy is executed.\nThen aqua-proxy executes ",(0,o.kt)("inlineCode",{parentName:"p"},"aqua exec")," passing the program name and command line arguments.\nIn case of ",(0,o.kt)("inlineCode",{parentName:"p"},"go version"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"aqua exec -- go version")," is executed.\n",(0,o.kt)("inlineCode",{parentName:"p"},"aqua exec")," reads the configuration file and finds the package which includes ",(0,o.kt)("inlineCode",{parentName:"p"},"go")," and gets the package versions.\naqua installs the package version in ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.aqua/pkgs")," if it isn't installed yet\nThen aqua executes the command ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.aqua/pkgs/http/golang.org/dl/go1.17.darwin-amd64.tar.gz/go/bin/go version"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"~/.aqua/bin")," is shared by every ",(0,o.kt)("inlineCode",{parentName:"p"},"aqua.yaml"),", so maybe in ",(0,o.kt)("inlineCode",{parentName:"p"},"aqua exec")," the package isn't found.\nPlease comment out the package ",(0,o.kt)("inlineCode",{parentName:"p"},"go")," and execute ",(0,o.kt)("inlineCode",{parentName:"p"},"go version")," again."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'inline_registry:\n  packages:\n  - name: go\n    type: http\n    url: https://golang.org/dl/go{{.Version}}.{{.OS}}-{{.Arch}}.tar.gz\n    link: https://golang.org/\n    description: The Go programming language\n    files:\n    - name: go # the symbolic `go` is created\n      src: go/bin/go\n    - name: gofmt # the symbolic `gofmt` is created\n      src: go/bin/gofmt\n\n# packages:\n# - name: go\n#   registry: inline\n#   version: "1.17"\n')),(0,o.kt)("p",null,"No package which includes ",(0,o.kt)("inlineCode",{parentName:"p"},"go")," is found, so aqua checks the global configuration ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.aqua/global/aqua.yaml"),".\nIf the package isn't found in the global configuration too,\naqua finds the command from the environment variable ",(0,o.kt)("inlineCode",{parentName:"p"},"PATH"),".\nFor example, if the ",(0,o.kt)("inlineCode",{parentName:"p"},"PATH")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.aqua/bin:/usr/local/bin:/bin"),", aqua checks the following files."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"~/.aqua/bin/go")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"/usr/local/bin/go")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"/bin/go"))),(0,o.kt)("p",null,"To prevent the infinite loop, aqua ignores the symbolic to aqua-proxy.\n",(0,o.kt)("inlineCode",{parentName:"p"},"~/.aqua/bin/go")," is a symbolic link to aqua-proxy, so this is ignored.\nIf go is installed in ",(0,o.kt)("inlineCode",{parentName:"p"},"/usr/local/bin/go"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"/usr/local/bin/go version")," is executed.\nIf ",(0,o.kt)("inlineCode",{parentName:"p"},"go")," isn't found, aqua exits with non zero exit code."))}m.isMDXComponent=!0}}]);