"use strict";(self.webpackChunkaqua_docusaurus=self.webpackChunkaqua_docusaurus||[]).push([[1479],{3905:function(e,a,n){n.d(a,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var p=r.createContext({}),c=function(e){var a=r.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},s=function(e){var a=c(e.components);return r.createElement(p.Provider,{value:a},e.children)},g={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},u=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=t,d=u["".concat(p,".").concat(m)]||u[m]||g[m]||i;return n?r.createElement(d,o(o({ref:a},s),{},{components:n})):r.createElement(d,o({ref:a},s))}));function m(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var p in a)hasOwnProperty.call(a,p)&&(l[p]=a[p]);l.originalType=e,l.mdxType="string"==typeof e?e:t,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},253:function(e,a,n){n.r(a),n.d(a,{assets:function(){return s},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return g}});var r=n(7462),t=n(3366),i=(n(7294),n(3905)),o=["components"],l={sidebar_position:1200},p="`go` Package",c={unversionedId:"reference/registry-config/go-package",id:"reference/registry-config/go-package",title:"`go` Package",description:"Use go_install package instead of go package",source:"@site/docs/reference/registry-config/go-package.md",sourceDirName:"reference/registry-config",slug:"/reference/registry-config/go-package",permalink:"/docs/reference/registry-config/go-package",draft:!1,editUrl:"https://github.com/aquaproj/aquaproj.github.io/edit/main/docs/reference/registry-config/go-package.md",tags:[],version:"current",sidebarPosition:1200,frontMatter:{sidebar_position:1200},sidebar:"tutorialSidebar",previous:{title:"`github_archive` Package",permalink:"/docs/reference/registry-config/github-archive-package"},next:{title:"`go_install` Package",permalink:"/docs/reference/registry-config/go-install-package"}},s={},g=[{value:"File parameter",id:"file-parameter",level:2}],u={toc:g};function m(e){var a=e.components,n=(0,t.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"go-package"},(0,i.kt)("inlineCode",{parentName:"h1"},"go")," Package"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Use ",(0,i.kt)("inlineCode",{parentName:"p"},"go_install")," package instead of ",(0,i.kt)("inlineCode",{parentName:"p"},"go")," package"),(0,i.kt)("p",{parentName:"div"},"For the historical reason, there are two package types building Go tools, ",(0,i.kt)("inlineCode",{parentName:"p"},"go")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"go_install"),"."),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"go"),": Packages are downloaded from GitHub Archive and are built by ",(0,i.kt)("inlineCode",{parentName:"li"},"go build")," command"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"go_install"),": Packages are installed by ",(0,i.kt)("inlineCode",{parentName:"li"},"go install")," command")),(0,i.kt)("p",{parentName:"div"},"Basically when you add new packages, we recommend using the ",(0,i.kt)("inlineCode",{parentName:"p"},"go_install")," package instead of the ",(0,i.kt)("inlineCode",{parentName:"p"},"go")," package."))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua/issues/798"},"#798")," ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua/issues/799"},"#799")),(0,i.kt)("p",null,"aqua >= ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua/releases/tag/v1.7.0"},"v1.7.0")," is required."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"repo_owner"),": The repository owner name"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"repo_name"),": The repository name")),(0,i.kt)("p",null,"The repository archive is downloaded from GitHub and the package is built by command ",(0,i.kt)("inlineCode",{parentName:"p"},"go build")," when it is installed.\nSo the command ",(0,i.kt)("inlineCode",{parentName:"p"},"go")," is required.\naqua is a CLI Version Manager, you have to specify the version. Unlike ",(0,i.kt)("inlineCode",{parentName:"p"},"go install")," command, you can't specify the head of the default branch."),(0,i.kt)("p",null,"e.g. ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/google/wire"},"https://github.com/google/wire")),(0,i.kt)("p",null,"registry.yaml"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'packages:\n  - type: go\n    repo_owner: google\n    repo_name: wire\n    description: Compile-time Dependency Injection for Go\n    files:\n      - name: wire\n        src: ./cmd/wire\n        dir: "wire-{{trimV .Version}}"\n')),(0,i.kt)("p",null,"aqua.yaml"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"registries:\n  - name: local\n    type: local\n    path: registry.yaml\npackages:\n  - name: google/wire@v0.5.0\n    registry: local\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ aqua which wire\n/home/foo/.local/share/aquaproj-aqua/pkgs/go/github.com/google/wire/v0.5.0/bin/wire\n\n$ aqua install\nINFO[0000] create a symbolic link                        aqua_version= env=darwin/arm64 link_file=/home/foo/.local/share/aquaproj-aqua/bin/wire new=aqua-proxy package_name=google/wire package_version=v0.5.0 program=aqua registry=standard\nINFO[0000] download and unarchive the package            aqua_version= env=darwin/arm64 package_name=google/wire package_version=v0.5.0 program=aqua registry=standard\nINFO[0001] building Go tool                              aqua_version= env=darwin/arm64 exe_path=/home/foo/.local/share/aquaproj-aqua/pkgs/go/github.com/google/wire/v0.5.0/bin/wire file_name=wire go_build_dir=/home/foo/.local/share/aquaproj-aqua/pkgs/go/github.com/google/wire/v0.5.0/src/wire-0.5.0 go_src=./cmd/wire package_name=google/wire package_version=v0.5.0 program=aqua registry=standard\n")),(0,i.kt)("p",null,"From aqua ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua/releases/tag/v1.9.0"},"v1.9.0"),", if there is no GitHub Repository tag or the latest tag is old, you can specify Git revision instead of tag."),(0,i.kt)("p",null,"e.g."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"packages:\n  - name: google/wire\n    registry: local\n    version: 79660af94317b9c466adc39f27f469f1079c779b\n")),(0,i.kt)("h2",{id:"file-parameter"},"File parameter"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'    files:\n      - name: wire\n        src: ./cmd/wire\n        dir: "wire-{{trimV .Version}}"\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"name: command name"),(0,i.kt)("li",{parentName:"ul"},"dir: Directory path where ",(0,i.kt)("inlineCode",{parentName:"li"},"go build")," is run"),(0,i.kt)("li",{parentName:"ul"},"src: go build's target path")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"${AQUA_ROOT_DIR}/pkgs/go/github.com/google/wire/v0.5.0/\n  bin/wire\n  src/ # GitHub Repository Archive\n    wire-0.5.0/ # `go build` is run on this directory\n      cmd/wire # build target\n")),(0,i.kt)("p",null,"The following command is run."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},'$ go build -o "${AQUA_ROOT_DIR}/pkgs/go/github.com/google/wire/v0.5.0/bin/wire" "./cmd/wire"\n')))}m.isMDXComponent=!0}}]);